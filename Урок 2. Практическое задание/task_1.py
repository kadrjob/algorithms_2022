"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def run():
    valid_operations = ['0', '+', '-', '*', '/']
    user_operation = input('Введите операцию (+, -, *, / или 0 для выхода): ').strip()

    if user_operation not in valid_operations:
        print(f'Вы ввели неверную операцию. Доступные операции {str(valid_operations)}', )
        run()

    if user_operation == '0':
        return

    user_value1 = input('Введите первое число: ').strip()
    if not user_value1.isdigit():
        print('Вы ввели не число. Исправьтесь')
        run()

    user_value2 = input('Введите второе число: ').strip()
    if not user_value1.isdigit():
        print('Вы ввели не число. Исправьтесь')

    # добавлена проверка деления на ноль
    if user_operation == '/' and user_value2 == '0':
        print('На ноль делить нельзя!')
        run()

    result = eval(f'{user_value1}{user_operation}{user_value2}')

    print(f'Ваш результат {result}')
    run()


run()
